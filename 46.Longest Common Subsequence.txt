//Longest Common Subsequence
class Solution {
    public int longestCommonSubsequence(String text1, String text2) {
        int x=text1.length(),y=text2.length();
        int dp[][]=new int[x+1][y+1];
        for(int i=1;i<=x;i++){
            for(int j=1;j<=y;j++){
                dp[i][j]=-1;
            }
        }
        return findSequence(x,y,text1,text2,dp);
    }
    static int findSequence(int x,int y,String s1,String s2,int dp[][])     {
        if(x==0 || y==0){
            return 0;
        }
        if(dp[x][y]!=-1){
            return dp[x][y];
        }
        if(s1.charAt(x-1)==s2.charAt(y-1)){
            return dp[x][y]=1+findSequence(x-1,y-1,s1,s2,dp);
        }
        else{
            return dp[x][y]=Math.max(findSequence(x,y-1,s1,s2,dp),findSequence(x-1,y,s1,s2,dp));
        }
    }  
}