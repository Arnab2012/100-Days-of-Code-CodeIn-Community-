//Number of Distinct Islands
class Solution {
    void helper(int[][] vis,int[][] grid,int row,int col,ArrayList<String> res,int[] delrow,int[] delcol,int row1,int col1){
        vis[row][col]=1;
        res.add(Integer.toString(row-row1)+""+Integer.toString(col-col1));
        int m=grid.length,n=grid[0].length;
        for(int i=0;i<4;i++){
            int nrow=delrow[i]+row;
            int ncol=delcol[i]+col;
            if(nrow>=0 && nrow<m && ncol>=0 && ncol<n && vis[nrow][ncol]==0 && grid[nrow][ncol]==1){
                helper(vis,grid,nrow,ncol,res,delrow,delcol,row1,col1);
            }
        }
    }
    int countDistinctIslands(int[][] grid) {
        // Your Code here
        int row=grid.length,col=grid[0].length;
        int[][] visited=new int[row][col];
        Set<ArrayList<String>> st=new HashSet<>();
        int[] delrow={0,1,-1,0};
        int[] delcol={1,0,0,-1};
        
        for(int i=0;i<row;i++){
            for(int j=0;j<col;j++){
                if(visited[i][j]==0 && grid[i][j]==1){
                    ArrayList<String> res=new ArrayList<String>();
                    helper(visited,grid,i,j,res,delrow,delcol,i,j);
                    st.add(res);
                }
            }
        }
        return st.size();
    }
}
