//Minimum Spanning Tree(Prims Algo)
class Solution
{
    //Function to find sum of weights of edges of the Minimum Spanning Tree.
    static class Pair implements Comparable<Pair>{
        int v;
        int wt;
        Pair(int v,int wt){
            this.v=v;
            this.wt=wt;
        }
        public int compareTo(Pair that){
            return this.wt-that.wt;
        }
    }
    static int spanningTree(int V, ArrayList<ArrayList<ArrayList<Integer>>> adj) 
    {
        // Add your code here
        boolean visited[]=new boolean[V];
        PriorityQueue<Pair>q=new PriorityQueue<>();
        q.add(new Pair(0,0));
        int ans=0;
        
        while(!q.isEmpty()){
            Pair curr=q.remove();
            int vt=curr.v;
            if(visited[vt]){
                continue;
            }
            ans+=curr.wt;
            visited[vt]=true;
            ArrayList<ArrayList<Integer>>neighbour=adj.get(vt);
            for(ArrayList<Integer>elements:neighbour){
                int v=elements.get(0);
                int w=elements.get(1);
                if(visited[v]==false){
                    q.add(new Pair(v,w));
                }
            }
        }
        return ans;
    }
}
